plugins {
    id "io.freefair.lombok" version "${lombokPluginVersion}"
    id 'java-library'
    id 'java'
    id 'maven-publish'
    id 'net.ltgt.errorprone' version '3.0.1'
    id 'idea'
}

group "${projectGroup}"
version "${projectVersion}"


java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    withSourcesJar()
    withJavadocJar()
}

allprojects {
    repositories {
        mavenCentral()
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "${projectGroup}"
            artifactId = "${projectName}"
            version = "${projectVersion}"
            from components.java

            pom {
                name = 'Lark Client'
                description = 'Dead simple Lark webhook client'
                url = 'https://github.com/mawngo/java-lark-client'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'mawngo'
                        name = 'Nguyen Toan'
                        email = 'sitdownrightnow.dev@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git:github.com/mawngo/java-lark-client.git'
                    developerConnection = 'scm:git:ssh://github.com/mawngo/java-lark-client.git'
                    url = 'https://github.com/mawngo/java-lark-client'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

dependencies {
    errorprone "com.google.errorprone:error_prone_core:$errorProneVersion"
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation 'org.slf4j:slf4j-api:2.0.6'
}

tasks.withType(JavaCompile).configureEach {
    options.errorprone.disableWarningsInGeneratedCode = true
    options.errorprone.errorproneArgs = [
        '-Xep:UnusedMethod:OFF',
        '-Xep:JavaTimeDefaultTimeZone:OFF'
    ]
}

jar {
    archiveClassifier = ''
    enabled = true
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
